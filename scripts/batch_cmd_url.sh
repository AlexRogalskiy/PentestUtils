#!/bin/bash

#SESSION_NAME="batch_dirb"
PANEL_INDEX=1
DETACHED=0

COMMAND="dirb \$\$ -r -o &&"

INFO="""
This script run a command on a url list in a tmux session.
The script substitute \$\$ placeholder with url and && with filename created from url removing unallowed characters 

Usage 
        ./batch_cmd_url.sh -f file_with_url
        cat file_with_url | ./batch_cmd_url.sh
Options:
        -f input file
        -k: kill tmux session
        -c: change command, as format command \$\$ &&
        -d: detached
"""

# Read Array from pipe
if [ ! -t 0 ]
  then
    readarray PIPE_INPUT
    echo "Readed ${#PIPE_INPUT[@]} urls from pipe"
fi 

# Parse arguments
while getopts f:c:kd flag
do
    case "${flag}" in
        f) INPUT_FILE=${OPTARG}
           echo "Read urls from: $INPUT_FILE"
           readarray -t FILE_INPUT < $INPUT_FILE
           echo "Readed ${#FILE_INPUT[@]} urls from file"
           ;;
        c) COMMAND=${OPTARG};;
        k) echo "Killing tmux session: $SESSION_NAME"
           tmux kill-session -t $SESSION_NAME
           exit;; 
        d) DETACHED=1;;
    esac
done

# Merge inputs and remove duplicates
URLS=(`for R in "${PIPE_INPUT[@]}" "${FILE_INPUT[@]}" ; do echo "$R" ; done | sort -du`)

#Define session name using command name
SESSION_NAME=$(echo $COMMAND | grep -Po "(\w)+" | head -1)

#echo ${URLS[@]}
#for I in 0 1 2 3
#  do
#    echo "Start in $((4-$I)) seconds"
#    sleep 1 
#done

#Check if url provided
#TODO Need to check if valid urls
if [ ${#URLS[@]} -le 0 ]
  then
    echo "No urls provided"
fi

#Check if tmux session exist
tmux has-session -t $SESSION_NAME &> /dev/null

if [ $? != 0 ]
  then
    #echo "CREATE SESSION"
    #Create tmux new session detached
    tmux new -d -s $SESSION_NAME 
    for URL in ${URLS[@]}
      do
        #Create new panel in tmus session, substitute \$\$ placeholder with url and && placeholder with filename
        FILENAME=$(echo $URL | sed -E 's/http(s)?:\/\///g;s/\///g;s/\./_/g')
        #echo "CREATE PANEL $PANEL_INDEX"
        CMD=${COMMAND//\$\$/$URL}
        CMD=${CMD//&&/$FILENAME}
        echo $CMD
        tmux new-window -t $SESSION_NAME:$PANEL_INDEX  
        tmux send-keys -t $SESSION_NAME:$PANEL_INDEX "$CMD" C-m
        let PANEL_INDEX++
    done              
  else
    echo "Session already exist!"
fi

#Attach tu session
if [ $DETACHED -eq 0 ]
  then
    tmux select-window -t $SESSION_NAME:0
    tmux attach -t $SESSION_NAME
fi
